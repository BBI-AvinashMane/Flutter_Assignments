// Mocks generated by Mockito 5.4.4 from annotations
// in news_app/test/domain/get_news_test.dart.
// Do not manually edit this file.

// ignore_for_file: no_leading_underscores_for_library_prefixes
import 'dart:async' as _i4;
import 'package:mockito/mockito.dart' as _i1;
import 'package:news_app/features/manage_news/domain/entities/news_entity.dart'
    as _i5;
import 'package:news_app/features/manage_news/domain/repository/news_repository.dart'
    as _i2;
import 'package:news_app/features/manage_news/domain/usecases/get_news.dart'
    as _i3;

// ignore_for_file: type=lint
// ignore_for_file: avoid_redundant_argument_values
// ignore_for_file: avoid_setters_without_getters
// ignore_for_file: comment_references
// ignore_for_file: deprecated_member_use
// ignore_for_file: deprecated_member_use_from_same_package
// ignore_for_file: implementation_imports
// ignore_for_file: invalid_use_of_visible_for_testing_member
// ignore_for_file: prefer_const_constructors
// ignore_for_file: unnecessary_parenthesis
// ignore_for_file: camel_case_types
// ignore_for_file: subtype_of_sealed_class

class _FakeNewsRepository_0 extends _i1.SmartFake
    implements _i2.NewsRepository {
  _FakeNewsRepository_0(
    Object parent,
    Invocation parentInvocation,
  ) : super(
          parent,
          parentInvocation,
        );
}

/// A class which mocks [GetNews].
///
/// See the documentation for Mockito's code generation for more information.
class MockGetNews extends _i1.Mock implements _i3.GetNews {
  MockGetNews() {
    _i1.throwOnMissingStub(this);
  }

  @override
  _i2.NewsRepository get repository => (super.noSuchMethod(
        Invocation.getter(#repository),
        returnValue: _FakeNewsRepository_0(
          this,
          Invocation.getter(#repository),
        ),
      ) as _i2.NewsRepository);

  @override
  _i4.Future<List<_i5.NewsEntity>> call({
    required String query,
    required String language,
    int page = 1,
    int pageSize = 20,
  }) =>
      (super.noSuchMethod(
        Invocation.method(
          #call,
          [],
          {
            #query: query,
            #language: language,
            #page: page,
            #pageSize: pageSize,
          },
        ),
        returnValue: _i4.Future<List<_i5.NewsEntity>>.value(<_i5.NewsEntity>[]),
      ) as _i4.Future<List<_i5.NewsEntity>>);
}
